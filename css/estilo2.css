*{
    background-color: rgb(255, 255, 255);
}

.b{
    background-color: aliceblue;
    position: relative;
    left: 1705px;
    top: -494px;
    border-radius: 20px;
    font-weight: bolder;
    color: rgb(18, 18, 192);
    height: 35px;
    width: 80px;
    border: none;
    cursor: pointer;
    transition: transform 0.3s ease;
}

.b:hover{
    box-shadow: 1px 1px 5px 5px rgb(15, 15, 214);
    transform: scale(1.2);
}

.t{
    text-decoration: none;
    background-color: transparent;
}



.button2 {
    position: relative;
    padding: 5px 15px;
    display: flex;
    align-items: center;
    font-size: 17px;
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    border: 1px solid rgb(255,0,0);
    border-radius: 25px;
    outline: none;
    overflow: hidden;
    color: rgb(255,0,0);
    transition: color 0.3s 0.1s ease-out;
    text-align: center;
    margin-top: 200px;
    margin-left: 870px;
  }
  
  button span {
    margin: 10px;
  }
  
  .button2::before {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    content: '';
    border-radius: 50%;
    display: block;
    width: 20em;
    height: 20em;
    left: -5em;
    text-align: center;
    transition: box-shadow 0.5s ease-out;
    z-index: -1;
    color: #ffffff;
  }
  
  .button2:hover {
    color: #ffffff;
    border: 1px solid rgb(207, 13, 13);
  }
  
  .button2:hover::before {
    color: #ffffff;
    box-shadow: inset 0 0 0 10em rgb(255, 0, 0);
  }

  .i{
    text-decoration: none;
    color: red;
  }

  .my-loader {
    width: 200px;
    height: 200px;
    perspective: 1000px;
    margin: 100px auto;
    margin-left: 1100px;
  }
  
  .rubiks-cube {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    animation: my-rotateCube 5s infinite linear;
  }
  
  .my-loader .face {
    position: absolute;
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    height: 100%;
  }
  
  .my-loader .face.front {
    transform: translateZ(100px);
  }
  .my-loader .face.back {
    transform: rotateY(180deg) translateZ(100px);
  }
  .my-loader .face.left {
    transform: rotateY(-90deg) translateZ(100px);
  }
  .my-loader .face.right {
    transform: rotateY(90deg) translateZ(100px);
  }
  .my-loader .face.top {
    transform: rotateX(90deg) translateZ(100px);
  }
  .my-loader .face.bottom {
    transform: rotateX(-90deg) translateZ(100px);
  }
  
  .my-loader .cube {
    width: calc(100% / 3);
    height: calc(100% / 3);
    box-sizing: border-box;
    border: 1px solid #000;
  }
  
  @keyframes my-rotateCube {
    0% {
      transform: rotateX(0deg) rotateY(0deg);
    }
    100% {
      transform: rotateX(360deg) rotateY(360deg);
    }
  }

  .button-container {
    position: relative;
    top: -800;
    right: 10px;
    display: flex;
    justify-content: center;
    gap: 20px; /* Adjust this value to increase or decrease space between buttons */
    padding: 20px;
  }
  
  .brutalist-button {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border: 3px solid #000000;
    border-radius: 12px;
    padding: 0;
    text-decoration: none;
    color: #000000;
    font-weight: bold;
    position: relative;
    box-shadow: 4px 4px 0px #000000;
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    height: 130px;
    width: 130px;
    cursor: pointer;
  }
  
  .brutalist-button.openai {
    background-color: #356854;
  }
  
  .brutalist-button::before {
    content: "";
    position: absolute;
    left: 50%;
    bottom: -150%;
    width: 300%;
    height: 300%;
    border-radius: 50%;
    transform: translateX(-50%) scale(0);
    transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
    z-index: 1;
  }
  
  .brutalist-button.openai::before {
    background-color: #316b58;
  }
  
  .brutalist-button.claude::before {
    background-color: #e3d19c;
  }
  
  .brutalist-button:hover::before {
    transform: translateX(-50%) scale(1);
  }
  
  .brutalist-button:hover {
    transform: translate(-4px, -4px);
    box-shadow: 8px 8px 0px #000000;
  }
  
  .brutalist-button:active {
    transform: translate(2px, 2px);
    box-shadow: 2px 2px 0px #000000;
  }
  
  .openai-logo {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
    width: 90px;
    height: 90px;
    border-radius: 50%;
    transition: all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  }
  
  .openai-logo {
    align-items: center;
    justify-content: center;
    background-color: #0f1715; /* OpenAI's green color */
    border-radius: 50%; /* This creates the circular background */
  }
  
  .openai-icon {
    width: 54px;
    height: 54px;
    fill: #ffffff; /* White color for the SVG */
    transition: all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  
  @keyframes spin {
    0% {
      transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }
  
  .brutalist-button:hover .openai-logo {
    animation: spin 5s linear infinite;
    width: 50px;
    height: 50px;
    top: 28%;
  }
  
  .brutalist-button:hover .openai-icon {
    transform: scale(0.6);
  }
  
  .button-text {
    display: flex;
    flex-direction: column;
    align-items: center;
    line-height: 1.3;
    transition: all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    text-align: center;
    opacity: 0;
    transform: translateY(20px);
    z-index: 2;
    position: absolute;
    bottom: 18px;
    left: 0;
    right: 0;
  }
  
  .button-text span:first-child {
    font-size: 13px;
    font-weight: 500;
    margin-bottom: 2px;
  }
  
  .button-text span:last-child {
    font-size: 16px;
    font-weight: 800;
    text-transform: uppercase;
    letter-spacing: 0.8px;
    color: #ffffff;
  }
  
  .brutalist-button:hover .button-text {
    opacity: 1;
    transform: translateY(0);
  }
  
  .brutalist-button.openai:hover .button-text {
    color: #d3d3d3;
  }
  
  .brutalist-button.openai:hover .button-text span:last-child {
    color: #d6cbbf;
  }
  
  @media (hover: hover) and (pointer: fine) {
    .brutalist-button:hover {
      transform: translate(-4px, -4px);
      box-shadow: 8px 8px 0px #000000;
    }
  }
  
  .wheel-and-hamster {
    --dur: 1s;
    position: relative;
    width: 12em;
    height: 12em;
    font-size: 14px;
  }
  
  .wheel,
  .hamster,
  .hamster div,
  .spoke {
    position: absolute;
  }
  
  .wheel,
  .spoke {
    border-radius: 50%;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .wheel {
    background: radial-gradient(100% 100% at center,hsla(0,0%,60%,0) 47.8%,hsl(0,0%,60%) 48%);
    z-index: 2;
  }
  
  .hamster {
    animation: hamster var(--dur) ease-in-out infinite;
    top: 50%;
    left: calc(50% - 3.5em);
    width: 7em;
    height: 3.75em;
    transform: rotate(4deg) translate(-0.8em,1.85em);
    transform-origin: 50% 0;
    z-index: 1;
  }
  
  .hamster__head {
    animation: hamsterHead var(--dur) ease-in-out infinite;
    background: hsl(30,90%,55%);
    border-radius: 70% 30% 0 100% / 40% 25% 25% 60%;
    box-shadow: 0 -0.25em 0 hsl(30,90%,80%) inset,
          0.75em -1.55em 0 hsl(30,90%,90%) inset;
    top: 0;
    left: -2em;
    width: 2.75em;
    height: 2.5em;
    transform-origin: 100% 50%;
  }
  
  .hamster__ear {
    animation: hamsterEar var(--dur) ease-in-out infinite;
    background: hsl(0,90%,85%);
    border-radius: 50%;
    box-shadow: -0.25em 0 hsl(30,90%,55%) inset;
    top: -0.25em;
    right: -0.25em;
    width: 0.75em;
    height: 0.75em;
    transform-origin: 50% 75%;
  }
  
  .hamster__eye {
    animation: hamsterEye var(--dur) linear infinite;
    background-color: hsl(0,0%,0%);
    border-radius: 50%;
    top: 0.375em;
    left: 1.25em;
    width: 0.5em;
    height: 0.5em;
  }
  
  .hamster__nose {
    background: hsl(0,90%,75%);
    border-radius: 35% 65% 85% 15% / 70% 50% 50% 30%;
    top: 0.75em;
    left: 0;
    width: 0.2em;
    height: 0.25em;
  }
  
  .hamster__body {
    animation: hamsterBody var(--dur) ease-in-out infinite;
    background: hsl(30,90%,90%);
    border-radius: 50% 30% 50% 30% / 15% 60% 40% 40%;
    box-shadow: 0.1em 0.75em 0 hsl(30,90%,55%) inset,
          0.15em -0.5em 0 hsl(30,90%,80%) inset;
    top: 0.25em;
    left: 2em;
    width: 4.5em;
    height: 3em;
    transform-origin: 17% 50%;
    transform-style: preserve-3d;
  }
  
  .hamster__limb--fr,
  .hamster__limb--fl {
    clip-path: polygon(0 0,100% 0,70% 80%,60% 100%,0% 100%,40% 80%);
    top: 2em;
    left: 0.5em;
    width: 1em;
    height: 1.5em;
    transform-origin: 50% 0;
  }
  
  .hamster__limb--fr {
    animation: hamsterFRLimb var(--dur) linear infinite;
    background: linear-gradient(hsl(30,90%,80%) 80%,hsl(0,90%,75%) 80%);
    transform: rotate(15deg) translateZ(-1px);
  }
  
  .hamster__limb--fl {
    animation: hamsterFLLimb var(--dur) linear infinite;
    background: linear-gradient(hsl(30,90%,90%) 80%,hsl(0,90%,85%) 80%);
    transform: rotate(15deg);
  }
  
  .hamster__limb--br,
  .hamster__limb--bl {
    border-radius: 0.75em 0.75em 0 0;
    clip-path: polygon(0 0,100% 0,100% 30%,70% 90%,70% 100%,30% 100%,40% 90%,0% 30%);
    top: 1em;
    left: 2.8em;
    width: 1.5em;
    height: 2.5em;
    transform-origin: 50% 30%;
  }
  
  .hamster__limb--br {
    animation: hamsterBRLimb var(--dur) linear infinite;
    background: linear-gradient(hsl(30,90%,80%) 90%,hsl(0,90%,75%) 90%);
    transform: rotate(-25deg) translateZ(-1px);
  }
  
  .hamster__limb--bl {
    animation: hamsterBLLimb var(--dur) linear infinite;
    background: linear-gradient(hsl(30,90%,90%) 90%,hsl(0,90%,85%) 90%);
    transform: rotate(-25deg);
  }
  
  .hamster__tail {
    animation: hamsterTail var(--dur) linear infinite;
    background: hsl(0,90%,85%);
    border-radius: 0.25em 50% 50% 0.25em;
    box-shadow: 0 -0.2em 0 hsl(0,90%,75%) inset;
    top: 1.5em;
    right: -0.5em;
    width: 1em;
    height: 0.5em;
    transform: rotate(30deg) translateZ(-1px);
    transform-origin: 0.25em 0.25em;
  }
  
  .spoke {
    animation: spoke var(--dur) linear infinite;
    background: radial-gradient(100% 100% at center,hsl(0,0%,60%) 4.8%,hsla(0,0%,60%,0) 5%),
          linear-gradient(hsla(0,0%,55%,0) 46.9%,hsl(0,0%,65%) 47% 52.9%,hsla(0,0%,65%,0) 53%) 50% 50% / 99% 99% no-repeat;
  }
  
  /* Animations */
  @keyframes hamster {
    from, to {
      transform: rotate(4deg) translate(-0.8em,1.85em);
    }
  
    50% {
      transform: rotate(0) translate(-0.8em,1.85em);
    }
  }
  
  @keyframes hamsterHead {
    from, 25%, 50%, 75%, to {
      transform: rotate(0);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(8deg);
    }
  }
  
  @keyframes hamsterEye {
    from, 90%, to {
      transform: scaleY(1);
    }
  
    95% {
      transform: scaleY(0);
    }
  }
  
  @keyframes hamsterEar {
    from, 25%, 50%, 75%, to {
      transform: rotate(0);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(12deg);
    }
  }
  
  @keyframes hamsterBody {
    from, 25%, 50%, 75%, to {
      transform: rotate(0);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(-2deg);
    }
  }
  
  @keyframes hamsterFRLimb {
    from, 25%, 50%, 75%, to {
      transform: rotate(50deg) translateZ(-1px);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(-30deg) translateZ(-1px);
    }
  }
  
  @keyframes hamsterFLLimb {
    from, 25%, 50%, 75%, to {
      transform: rotate(-30deg);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(50deg);
    }
  }
  
  @keyframes hamsterBRLimb {
    from, 25%, 50%, 75%, to {
      transform: rotate(-60deg) translateZ(-1px);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(20deg) translateZ(-1px);
    }
  }
  
  @keyframes hamsterBLLimb {
    from, 25%, 50%, 75%, to {
      transform: rotate(20deg);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(-60deg);
    }
  }
  
  @keyframes hamsterTail {
    from, 25%, 50%, 75%, to {
      transform: rotate(30deg) translateZ(-1px);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(10deg) translateZ(-1px);
    }
  }
  
  @keyframes spoke {
    from {
      transform: rotate(0);
    }
  
    to {
      transform: rotate(-1turn);
    }
  }

  .nf{
    margin-top: -400px;
    margin-left: 450px;
  }

  .modelViewPort {
    /* The black circle background around the model*/
    perspective: 1000px;
    width: 20rem;
    aspect-ratio: 1;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #000;
    overflow: hidden;
  }
  .eva {
    --EVA-ROTATION-DURATION: 4s;
    transform-style: preserve-3d;
    animation: rotateRight var(--EVA-ROTATION-DURATION) linear infinite alternate;
  }
  .head {
    position: relative;
    width: 6rem;
    height: 4rem;
    border-radius: 48% 53% 45% 55% / 79% 79% 20% 22%;
    background: linear-gradient(to right, white 45%, gray);
  }
  .eyeChamber {
    width: 4.5rem;
    height: 2.75rem;
    position: relative;
    left: 50%;
    top: 55%;
    border-radius: 45% 53% 45% 48% / 62% 59% 35% 34%;
    background-color: #0c203c;
    box-shadow: 0px 0px 2px 2px white, inset 0px 0px 0px 2px black;
    transform: translate(-50%, -50%);
    animation: moveRight var(--EVA-ROTATION-DURATION) linear infinite alternate;
  }
  .eye {
    width: 1.2rem;
    height: 1.5rem;
    position: absolute;
    border-radius: 50%;
  }
  .eye:first-child {
    left: 12px;
    top: 50%;
    background: repeating-linear-gradient(
      65deg,
      #9bdaeb 0px,
      #9bdaeb 1px,
      white 2px
    );
    box-shadow: inset 0px 0px 5px #04b8d5, 0px 0px 15px 1px #0bdaeb;
    transform: translate(0, -50%) rotate(-65deg);
  }
  .eye:nth-child(2) {
    right: 12px;
    top: 50%;
    background: repeating-linear-gradient(
      -65deg,
      #9bdaeb 0px,
      #9bdaeb 1px,
      white 2px
    );
    box-shadow: inset 0px 0px 5px #04b8d5, 0px 0px 15px 1px #0bdaeb;
    transform: translate(0, -50%) rotate(65deg);
  }
  .body {
    width: 6rem;
    height: 8rem;
    position: relative;
    margin-block-start: 0.25rem;
    border-radius: 47% 53% 45% 55% / 12% 9% 90% 88%;
    background: linear-gradient(to right, white 35%, gray);
  }
  .hand {
    position: absolute;
    left: -1.5rem;
    top: 0.75rem;
    width: 2rem;
    height: 5.5rem;
    border-radius: 40%;
    background: linear-gradient(to left, white 15%, gray);
    box-shadow: 5px 0px 5px rgba(0, 0, 0, 0.25);
    transform: rotateY(55deg) rotateZ(10deg);
  }
  .hand:first-child {
    animation: compensateRotation var(--EVA-ROTATION-DURATION) linear infinite
      alternate;
  }
  .hand:nth-child(2) {
    left: 92%;
    background: linear-gradient(to right, white 15%, gray);
    transform: rotateY(55deg) rotateZ(-10deg);
    animation: compensateRotationRight var(--EVA-ROTATION-DURATION) linear
      infinite alternate;
  }
  .scannerThing {
    width: 0;
    height: 0;
    position: absolute;
    left: 60%;
    top: 10%;
    border-top: 180px solid #9bdaeb;
    border-left: 250px solid transparent;
    border-right: 250px solid transparent;
    transform-origin: top left;
    mask: linear-gradient(to right, white, transparent 35%);
    animation: glow 2s cubic-bezier(0.86, 0, 0.07, 1) infinite;
  }
  .scannerOrigin {
    position: absolute;
    width: 8px;
    aspect-ratio: 1;
    border-radius: 50%;
    left: 60%;
    top: 10%;
    background: #9bdaeb;
    box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.5);
    animation: moveRight var(--EVA-ROTATION-DURATION) linear infinite;
  }
  @keyframes rotateRight {
    from {
      transform: rotateY(0deg);
    }
    to {
      transform: rotateY(25deg);
    }
  }
  @keyframes moveRight {
    from {
      transform: translate(-50%, -50%);
    }
    to {
      transform: translate(-40%, -50%);
    }
  }
  @keyframes compensateRotation {
    from {
      transform: rotateY(55deg) rotateZ(10deg);
    }
    to {
      transform: rotatey(30deg) rotateZ(10deg);
    }
  }
  @keyframes compensateRotationRight {
    from {
      transform: rotateY(55deg) rotateZ(-10deg);
    }
    to {
      transform: rotateY(70deg) rotateZ(-10deg);
    }
  }
  @keyframes glow {
    from {
      opacity: 0;
    }
    20% {
      opacity: 1;
    }
    45% {
      transform: rotate(-25deg);
    }
    75% {
      transform: rotate(5deg);
    }
    100% {
      opacity: 0;
    }
  }

    .loader{
        margin-top: -270px;
        margin-left: 300px;
    }

    .icons-social-media {
      align-items: center;
      margin-top: 10px;
      padding: 5px;
      width: 32px;
      cursor: pointer !important;
      transition: 300ms all ease-in-out;
      position: relative;
    }
    
    .icons-social-media:hover {
      translate: -0px -10px;
    }
    
    #instagram,
        #youtube,#twitch {
      transition: 300ms all ease-in-out;
      clip-path: circle(65%);
    }
    
    #instagram:hover {
      background-color: rgb(221, 157, 189);
    }
    
    #youtube {
      height: 35px;
    }
    
    #youtube:hover {
      background-color: rgb(241, 96, 96);
    }
    
    #twitch:hover {
      background-color: rgb(196, 143, 245);
    }

    .nb{
      margin-top: -250px;
      margin-left: 780px;
    }